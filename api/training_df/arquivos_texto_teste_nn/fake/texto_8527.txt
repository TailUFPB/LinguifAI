donald rumsfeld is in full damage control mode after a declassified memo from  making the rounds revealed that he lied about iraq s  wmds   like anyone desperate to sway public opinion and keep himself out of jail  rumsfeld is giving interviews to tell  his side   why he decided to go the late show with stephen colbert is unclear  colbert is a screaming liberal  very smart and very well informed  perhaps rumsfeld thought he could outmaneuver the comedian  maybe he thought colbert would go easy on him  maybe rumsfeld is suffering from dementia needless to say  the interview did not go well for rumsfeld the talk show host said this showed bush administration officials believed there were weapons of mass destruction   but they had no hard evidence of their existence  i believe that sincerely   i don t think anybody made up the belief that there were weapons of mass destruction   colbert said  as rumsfeld insisted those beliefs were sincere   that is cynicism beyond what i would ever want to think of my government  i believe that everybody believed that they were there  but there was no hard proof that they were there   he continued   and yet it was presented to the american people as if there was  so there was an unknown known for the american people  it was known that there was not hard evidence  but we were presented a partial picture   and that s the unknown known that we were denied  do you think that was the right thing to do  in this  colbert is far nicer than i would have been  we already know that bush and his neo con administration wanted an excuse to invade iraq  in the immediate aftermath of    bush demanded that the intelligence community  find  a connection between iraq and the attacks  when they couldn t find a connection  one was manufactured for the sole purpose of selling the american people on the war  in this  known known  context  it takes very little to imagine bush  cheney and rumsfeld fabricating their  belief  in wmds from whole cloth but the best moment came when colbert got rumsfeld to admit  out loud  that the utter certainty about wmds that we were sold was  in fact  total bullshit  were there things that the administration or you knew that we didn t learn about out of the best possible intentions   which is  there were things that would undermine the case for a war you thought was necessary to save the united states   colbert said at last  rumsfeld delivered a straight answer  the president had available to him intelligence from all elements of the government  and the national security council members had that information   rumsfeld said   it was all shared  it was all supplied  and it s never certain  if it were a fact  it wouldn t be called intelligence  translation into non weasel speak  we lied when we said we  knew  for a fact that the wmds existed if you ll recall  the made up connection to   and wmds were the entire basis for the iraq war and rumsfeld just admitted they lied about them for the revisionists out there  a quick history lesson  rumsfeld didn t say he  thought  iraq had wmds  or that we were pretty sure or even very confident  he didn t equivocate in the slightest  he said we knew where they were  stephanopoulos  and is it curious to you that given how much control u s  and coalition forces now have in the country  they haven t found any weapons of mass destruction sec  rumsfeld   we know where they are  they re in the area around tikrit and baghdad and east  west  south and north somewhat  abc s this week     the american people had been told that our intelligence on wmds was as shaky as it actually was  no one but the most bloodthirsty among us would have supported it  americans are more than happy to bomb people that attack us or a friend  but preemptive war is not  and has never been  a part of our dna  rumsfeld and his co conspirators knew this so they lied through their teeth  it took a comedian to finally get one of the blood soaked architects of america s worst war since vietnam to admit it bravo  mr  colbert  bravo here s the amazing video featured image via screencap       in d   d execscript  d execscript  quot var  quot  c  for var e c length amp  amp  e c shift     c length  void    b d d d d    d b  aa function a  var b typeof a if  quot object quot   b if a  if a instanceof array return quot array quot  if a instanceof object return b var c object prototype tostring call a  if  quot  quot   c return quot object quot  if  quot  quot   c   quot number quot   typeof a length amp  amp  quot undefined quot   typeof a splice amp  amp  quot undefined quot   typeof a propertyisenumerable amp  amp  a propertyisenumerable  quot splice quot   return quot array quot  if  quot  quot   c   quot undefined quot   typeof a call amp  amp  quot undefined quot   typeof a propertyisenumerable amp  amp  a propertyisenumerable  quot call quot   return quot function quot  else return quot null quot  else if  quot function quot   b amp  amp  quot undefined quot   typeof a call return quot object quot  return b  ba function a b c  return a call apply a bind arguments   ca function a b c  if  a throw error   if  arguments length  var d array prototype slice call arguments   return function   var c array prototype slice call arguments  array prototype unshift apply c d  return a apply b c   return function   return a apply b arguments    l function a b c  l function prototype bind amp  amp    function prototype bind tostring   indexof  quot native code quot   ba ca return l apply null arguments   var n function a b  var c parseint a   return isnan c  b c  var p var u string prototype trim function a  return a trim    function a  return a replace        g  quot  quot    v function a b  return a b   a b    var da array prototype indexof function a b c  return array prototype indexof call a b c   function a b c  c null  c   c math max  a length c  c if  quot string quot   typeof a return quot string quot   typeof b amp  amp   b length a indexof b c    for  c a  length c   if c in a amp  amp a   b return c return   var w function a  w a  return a  w function     var x a  var y g navigator if y  var z y useragent if z  x z break a  x  quot  quot   var ea    x indexof  quot opera quot       x indexof  quot opr quot   a    x indexof  quot trident quot       x indexof  quot msie quot   fa    x indexof  quot edge quot   b    x indexof  quot gecko quot   amp  amp      x tolowercase   indexof  quot webkit quot   amp  amp    x indexof  quot edge quot    amp  amp      x indexof  quot trident quot       x indexof  quot msie quot    amp  amp    x indexof  quot edge quot   ga    x tolowercase   indexof  quot webkit quot   amp  amp    x indexof  quot edge quot   ha function   var a x if b return rv             exec a  if fa return edge       exec a  if a return  b   msie rv            exec a  if ga return webkit    s    exec a   c function   var a g document return a a documentmode void   d function   if ea amp  amp g opera  var a var b g opera version try a b   catch c  a b return a a  quot  quot   b ha    amp  amp  a b b  quot  quot   return a amp  amp  b c   b parsefloat a   string b  a    e    f function a  var b if   b e   b  for var c u string d   split  quot   quot   d u string a   split  quot   quot   e math max c length d length  f    b amp  amp f e  f    var h c   quot  quot  m d   quot  quot  r regexp  quot    d     d   quot   quot g quot   ma regexp  quot    d     d   quot   quot g quot   do var q r exec h    t ma exec m    if   q length amp  amp   t length break b v   q length  parseint q     t length  parseint t     v   q length   t length   v q t  while   b  b e   b return b  g g document ia g amp  amp a c      quot  quot   g compatmode parseint d     void  var h if   h  b amp  amp  a   var i if i a i   number ia  h i h  b amp  amp f  quot    quot   var j a amp  amp  f  quot  quot   var k function a  var b document return quot string quot   typeof a b getelementbyid a  a  l function a b  var c b  document return c queryselectorall amp  amp c queryselector c queryselectorall  quot   quot  a  ka a b   ka function a b  var c d e f c document c b  c if c queryselectorall amp  amp c queryselector amp  amp a return c queryselectorall  quot  quot   a  quot   quot  a  quot  quot    if a amp  amp c getelementsbyclassname  var h c getelementsbyclassname a  return h h c getelementsbytagname  quot   quot   if a  f    for d e  c h d    var m c classname r if r  quot function quot   typeof m split r   da m split   s    a  r amp  amp  f c  f length e return f return h  la  script  style  head  iframe  object   m  img  quot   quot  br  quot  n quot   na function   var a document getelementbyid  quot feedback closing template quot   if j amp  amp null   a amp  amp  quot innertext quot in a a a innertext replace    r n  r  n  g  quot  n quot   else var b  n a b    a b join  quot  quot   a a replace    xad  g  quot   quot   replace   xad g  quot  quot   a a replace    g  quot  quot   j   a a replace     g  quot   quot     quot   quot   a amp  amp  a a replace    s    quot  quot    return a  n function a b c  if   a nodename in la  if   a nodetype c b push string a nodevalue  replace    r n  r  n  g  quot  quot    b push a nodevalue  else if a nodename in m b push m  else for a a firstchild a  n a b c  a a nextsibling  o function a  this w a  g document  document  oa function a b  return l  quot feedbackdescription quot  b  a w   o prototype createelement function a  return this w createelement a   o prototype createtextnode function a  return this w createtextnode string a    o prototype appendchild function a b  a appendchild b   var p function a  var b window return b getcomputedstyle b getcomputedstyle a null  a currentstyle  var q function a b  a addeventlistener a addeventlistener  quot click quot  b    a attachevent amp  amp a attachevent  quot onclick quot  b   var r function a  var b window b googleimagerequests   b googleimagerequests   var c b document createelement  quot img quot   c src a b googleimagerequests push c   var pa function a  var b    if a amp  amp a keyvalue  a a keyvalue for var c  c a length c    var d a if  quot key quot in d amp  amp  quot value quot in d  var e d value b null  e null string e    return b  var qa function a  a string a  if    s    test a          s       test a replace     g  quot   quot   replace      quot   quot  true false null    d       d        d                   g  quot   quot   replace                 s new ra a b  return b join  quot  quot    ra function   this o void   s function a b c  if null  b c push  quot null quot   else if  quot object quot   typeof b  if  quot array quot   aa b   var d b b d length c push  quot  s a a o a o call d string f  e  e c  e  quot   quot  c push  quot   quot   return if b instanceof string  b instanceof number  b instanceof boolean b b valueof   else c push  quot   quot   f  quot  quot  for d in b object prototype hasownproperty call b d  amp  amp  e b  quot function quot   typeof e amp  amp  c push f  u d c  c push  quot   quot   s a a o a o call b d e  e c  f  quot   quot    c push  quot   quot   return  switch typeof b  case  quot string quot  u b c  break case  quot number quot  c push isfinite b  amp  amp  isnan b  string b   quot null quot   break case  quot boolean quot  c push string b   break case  quot function quot  c push  quot null quot   break default throw error  quot unknown type   quot  typeof b      sa    quot       quot    quot    quot   quot      quot   quot   quot   quot     quot   quot  b quot   quot   b quot   quot  f quot   quot   f quot   quot  n quot   quot   n quot   quot  r quot   quot   r quot   quot  t quot   quot   t quot   quot   quot   quot    quot   ta   uffff  test  quot  uffff quot     g   g u function a b  b push   quot   a replace ta function a  var b sa b   b  quot   u quot   a charcodeat     tostring   substr   sa b  return b     quot     var ua function   var a document body b a amp  amp a ownerdocument c b amp  amp  b defaultview  b parentwindow  d if d c  var e d c top try var f if f   d amp  amp null  d location href b  try w d foo  f   break b catch m   f   e f catch m  e   d e c top null c d this o   c this h null try this h a amp  amp a getboundingclientrect   catch m   e a f  for d this h e  try d amp  amp  f  d top  var h e ownerdocument e  h defaultview  h parentwindow  frameelement d e getboundingclientrect   catch m  break this p f c c  g this     quot  quot   c document compatmode c document documentelement c document body  clientheight b b amp  amp   visible  hidden  prerender  preview      this aa   a amp  amp     b    b  amp  amp   this h top  this h bottom amp  amp this h left  this h right   va function   var a new ua return a o amp  amp   a aa  a p  a     var v function a b c d  this g a this r b this t c this m  this l document getelementbyid  quot mtadmas quot   this m document getelementbyid  quot mtadmaundo quot   this c document getelementbyid  quot mtadmac quot   this d document getelementbyid  quot mtadmback quot   this j document getelementbyid  quot mtadmpc quot   this n document getelementbyid  quot mtadmpundo quot   this a document getelementbyid  quot mtadmpunclose quot   this l this u this h this f null this v  this i null this j   this s null this w d d getadslength     this g d  amp  amp this g registerwidget this   this i   wa function a  for var b document getelementsbyname  quot surveyoptions quot   c  c b  length c   q b l a x a b value   a m amp  amp q a m l a b a  quot  quot    a n amp  amp q a n l a b a  quot  quot    a a amp  amp q a a l a y a   a d amp  amp q a d l a back a   a g amp  amp  a g listenonobject  quot muteoptionselected quot  l a k a   a g foreachad l function a  a listenonobject  quot multislotmutecollapse quot  l this v this   a listenonobject  quot multislotmutecollapseundo quot  l this u this    a     v prototype k function a  this f a closebuttontoken this h a creativeconversionurl this u a ablationconfig this l a undocallback this v a creativeindex   this g amp  amp  this s this g getad this v   if    a type  a l  quot survey quot   for var b  quot survey quot  this v c  c a length c   a style display a id  b  quot block quot   quot none quot  a document getelementsbyname  quot surveyoptions quot   for b  b a length b   a checked   this l style display  quot block quot  w this  x this  else    a type amp  amp  this j style display  quot block quot  this l style display  quot none quot  w this  xa this document getelementbyid  quot pub feedback closing quot   this u    var y function a  a i amp  amp  window clearinterval a i  a i null a j    k  quot pub feedback closing quot   style display  quot none quot  k  quot ad feedback closing quot   style display  quot none quot   v prototype b function a  this j   y this  r z this  quot userfeedbackundo quot  a   this l     v prototype y function   var a  msgtype  quot resize me quot   a keyvalue  a t a  window top postmessage a  quot   quot   this j   this b  quot  quot    v prototype back function   this j   y this  this l style display  quot block quot  w this  x this    v prototype x function a  this c style display  quot block quot  this l style display  quot none quot  x this  r z this  quot mutesurveyoption quot  a   a document getelementbyid  quot ad feedback closing quot   this m this w  amp  amp this g amp  amp this r ya this a  xa this a this u   var z function a b c  return a h  quot  amp label  quot  b  quot  amp cbt  quot  a f  quot  amp labelinstance  quot  c  w function a  a c style display  quot none quot   x function a  a j style display  quot none quot   za function a b c d e f  var h c d if     e  e h  a i   var m na   c l function   var a  quot  quot  h   d amp  amp  h amp  amp  a m replace  quot   d quot  string h    b style display a  quot inline quot   quot none quot  if  quot textcontent quot in b b textcontent a else if   b nodetype b data a else if b firstchild amp  amp   b firstchild nodetype  for  b lastchild  b firstchild  b removechild b lastchild  b firstchild data a else for var c c b firstchild  b removechild c  b appendchild    b nodetype b b ownerdocument  b document  createtextnode string a    if h  e try this j   f   catch q     h amp  amp y this  h    a  c      h amp  amp  a i window setinterval c      xa function a b c  if c amp  amp window top amp  amp window top postmessage  var d qa c  e pa d  f  quot resize me quot   d msgtype amp  amp  quot animate quot   e rstr if  quot ablate me quot   d msgtype amp  amp e  f amp  amp  va   a a amp  amp  a i window innerheight f document getelementbyid  quot cbtf quot   f oa p   p new o  f  f aa a s f  c ba d f   za a b n e   n e countdown   n e   function   window top postmessage c  quot   quot       ba function a b  if  isnan b  amp  amp isfinite b   var c   if a keyvalue  for var d a keyvalue e  e d length e    var f d if  quot key quot in f amp  amp  quot value quot in f amp  amp  quot rnh quot   f key  c   f value b tostring   break  c  d push  key  quot rnh quot  value b tostring      return t a   v prototype s function a  var b p a  a p a parentnode parentnode  return parseint b height   parseint b margintop   parseint a margintop    var aa function a b  for var c  d b d amp  amp  quot body quot   d tagname d d parentnode d style amp  amp  quot block quot   d style display amp  amp  c push  el d val d style display   d style display  quot block quot   for var d a b  e e c pop    void    e z amp  amp  e ba style display e z  return d  ya function a b  za a b  a t  l function   var a  creativeindex this s getindex   undopingbackurl z this  quot userfeedbackundo quot   quot  quot    this s fireonobject  quot multislotmutecollapse quot  a   a    v prototype v function   this m   this g resetall    v prototype u function    this m amp  amp this m    v prototype show function   this g style display  quot block quot   v prototype hide function   this g style display  quot none quot   v prototype reset function   this hide    v prototype show v prototype show v prototype hide v prototype hide v prototype reset v prototype reset v prototype setupsurveypage v prototype k k  quot cmtads quot  function a b  var c null d document getelementbyid  quot cbtf quot   d amp  amp  c new v d   a b   window adslot  wa c   c amp  amp k  quot mutesurvey quot  c  return c      call this  cmtads true          gt   b   e   a        gt 